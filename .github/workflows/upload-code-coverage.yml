# Copyright 2023 Democratized Data Foundation
#
# Use of this software is governed by the Business Source License
# included in the file licenses/BSL.txt.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0, included in the file
# licenses/APL.txt.

name: Upload Code Coverage Workflow

on:
  workflow_run:
    # Warning: this workflow must NOT:
    # - interact with any new code.
    # - checkout new code.
    # - build/compile/run any thing
    # - make any indirect calls (i.e. make xyz, or npm install, etc.)
    # Note this workflow:
    # - will use the base's workflow file state.
    # - doesn't run on the PR or the branch coming in, it runs on the default branch.
    # - has read-write repo token
    # - has access to secrets
    workflows: ["Generate Code Coverage Workflow"]
    types:
      - completed

env:
  # Note: Since this runs on the state of workflow on the default branch, the
  # HEAD i.e. `github.sha` is always the default branch, so we try to fetch the
  # head sha whose workflow triggered this action by `github.event.workflow_run.head_sha`.
  COMMIT_SHA: ${{ github.event.workflow_run.head_sha || github.sha }}

jobs:
  upload-code-coverage:
    name: Upload code coverage job

    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    runs-on: ubuntu-latest

    steps:
      - name: Print workflow_run head and github SHA
        run: |
          echo "COMMIT_SHA=[${COMMIT_SHA}]\n"
          echo "github.event.workflow_run.head_sha=[${{github.event.workflow_run.head_sha}}]\n"
          echo "github.sha=[${{github.sha}}]\n"

      - name: Load the coverage report stored as an artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          repo: ${{ github.repository }}
          workflow: generate-code-coverage.yml
          workflow_conclusion: success
          commit: ${{ env.COMMIT_SHA }}
          name: coverage-report-artifact-${{ env.COMMIT_SHA }}
          name_is_regexp: false
          search_artifacts: false
          check_artifacts: false
          if_no_artifact_found: fail

      - name: Upload coverage to Codecov without token, retry on failure
        env:
          CODECOV_SECRET: ${{ secrets.CODECOV_TOKEN }}
        if: env.CODECOV_SECRET == ''
        uses: Wandalen/wretry.action@v1.0.36
        with:
          attempt_limit: 5
          attempt_delay: 10000
          action: codecov/codecov-action@v3
          with: |
            files: ./coverage.txt
            flags: defradb-tests
            name: codecov-report
            sha: ${{ env.COMMIT_SHA }}
            fail_ci_if_error: true
            verbose: true

      - name: Upload coverage to Codecov with token
        env:
          CODECOV_SECRET: ${{ secrets.CODECOV_TOKEN }}
        if: env.CODECOV_SECRET != ''
        uses: codecov/codecov-action@v3
        with:
          token: ${{ env.CODECOV_SECRET }}
          files: ./coverage.txt
          flags: defradb-tests
          name: codecov-report
          sha: ${{ env.COMMIT_SHA }}
          fail_ci_if_error: true
          verbose: true
          # path_to_write_report: ./coverage/codecov_report.txt
          # directory: ./coverage/reports/
