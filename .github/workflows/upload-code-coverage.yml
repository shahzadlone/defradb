# Copyright 2023 Democratized Data Foundation
#
# Use of this software is governed by the Business Source License
# included in the file licenses/BSL.txt.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0, included in the file
# licenses/APL.txt.

name: Upload Code Coverage Workflow

on:
  workflow_run:
    # Warning: this workflow must NOT:
    # - interact with any new code.
    # - checkout new code.
    # - build/compile/run any thing
    # - make any indirect calls (i.e. make xyz, or npm install, etc.)
    # Note this workflow:
    # - will use the base's workflow file state.
    # - has read-write repo token
    # - has access to secrets
    workflows: ["Generate Code Coverage Workflow"]
    types:
      - completed

env:
  RELEVANT_SHA: ${{ github.event.pull_request.head.sha || github.sha }}
  HEAD_BRANCH: ${{ github.event.workflow_run.head_branch }}
  CODECOV_SECRET: ${{ secrets.CODECOV_TOKEN }}
  WORKFLOW_RUN_ID: ${{ github.event.workflow_run.id }}

jobs:
  upload-code-coverage:
    name: Upload code coverage job

    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    runs-on: ubuntu-latest

    steps:
      - name: Echo the relevant commit SHA
        run: |
          echo "Workflow run id=[${WORKFLOW_RUN_ID}]\n"
          echo "Relevant commit SHA=[${RELEVANT_SHA}]\n"
          echo "HEAD_BRANCH=[${HEAD_BRANCH}]\n"
          echo "PR_SHA=[${{github.event.pull_request.head.sha}}]\n"
          echo "GH_SHA=[${{github.sha}}]\n"

      - name: Load the coverage report stored as an artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          repo: ${{ github.repository }}
          workflow: generate-code-coverage.yml
          workflow_conclusion: success
          # run_id: ${{ env.WORKFLOW_RUN_ID }}
          # commit: ${{github.event.pull_request.head.sha}}
          name: coverage-report-artifact-${{ env.HEAD_BRANCH }}
          name_is_regexp: false
          search_artifacts: false
          check_artifacts: false
          if_no_artifact_found: fail

      - name: TEMP CAT
        run: |
          echo "Recieved"
          cat coverage.txt
          ##TEST
            #- name: Upload coverage to Codecov without token, retry on failure
            #  if: env.CODECOV_SECRET == ''
            #  uses: Wandalen/wretry.action@v1.0.36
            #  with:
            #    attempt_limit: 5
            #    attempt_delay: 10000
            #    action: codecov/codecov-action@v3
            #    with: |
            #      files: ./coverage.txt
            #      flags: defra-tests
            #      name: codecov-umbrella
            #      fail_ci_if_error: true
            #      verbose: true
 
            #- name: Upload coverage to Codecov with token
            #  if: env.CODECOV_SECRET != ''
            #  uses: codecov/codecov-action@v3
            #  with:
            #    token: ${{ env.CODECOV_SECRET }}
            #    files: ./coverage.txt
            #    flags: defra-tests
            #    name: codecov-umbrella
            #    fail_ci_if_error: true
            #    verbose: true
            #    # path_to_write_report: ./coverage/codecov_report.txt
            #    # directory: ./coverage/reports/


#    # delete-artifact
#    - uses: geekyeggo/delete-artifact@v2
#      with:
#          name: my-artifact
#          useGlob: false
